{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/deferred\/init(_:)","title":"init(() -> T)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/deferred\/get()","title":"func get() -> T","type":"method"}],"path":"\/documentation\/interact\/deferred","title":"Deferred","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/selectiontracker\/init(items:)","title":"init(items: Published<[T]>.Publisher)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/selectiontracker\/items","title":"var items: [T]","type":"property"},{"path":"\/documentation\/interact\/selectiontracker\/selection","title":"var selection: Set<T>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/selectiontracker\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/corners(for:)","title":"func corners(for: T) -> RectCorner","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/handleclick(item:)","title":"func handleClick(item: T)","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/handlecommandclick(item:)","title":"func handleCommandClick(item: T)","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/handledirectiondown()","title":"func handleDirectionDown() -> T?","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/handledirectionup()","title":"func handleDirectionUp() -> T?","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/handleshiftclick(item:)","title":"func handleShiftClick(item: T)","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/handleshiftdirectiondown()","title":"func handleShiftDirectionDown() -> T?","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/handleshiftdirectionup()","title":"func handleShiftDirectionUp() -> T?","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/isselected(item:)","title":"func isSelected(item: T) -> Bool","type":"method"},{"path":"\/documentation\/interact\/selectiontracker\/selectall()","title":"func selectAll()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/selectiontracker\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/interact\/selectiontracker\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/interact\/selectiontracker","title":"SelectionTracker","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/interact\/frameautosaveview\/coordinator","title":"FrameAutosaveView.Coordinator","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/frameautosaveview\/frameautosavensview\/viewdidmovetowindow()","title":"func viewDidMoveToWindow()","type":"method"}],"path":"\/documentation\/interact\/frameautosaveview\/frameautosavensview","title":"FrameAutosaveView.FrameAutosaveNSView","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/frameautosaveview\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/frameautosaveview\/makecoordinator()","title":"func makeCoordinator() -> FrameAutosaveView.Coordinator","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/makensview(context:)","title":"func makeNSView(context: FrameAutosaveView.Context) -> FrameAutosaveView.FrameAutosaveNSView","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/updatensview(_:context:)","title":"func updateNSView(FrameAutosaveView.FrameAutosaveNSView, context: FrameAutosaveView.Context)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/frameautosaveview\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/frameautosaveview\/sizethatfits(_:nsview:context:)","title":"func sizeThatFits(ProposedViewSize, nsView: Self.NSViewType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/frameautosaveview\/dismantlensview(_:coordinator:)","title":"static func dismantleNSView(Self.NSViewType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/interact\/frameautosaveview\/nsviewrepresentable-implementations","title":"NSViewRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/acceptsfirstresponder(isfirstresponder:)","title":"func acceptsFirstResponder(isFirstResponder: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(activationpoint:)-21910","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(activationpoint:)-6fg34","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityaction(named:_:)-1pmhi","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityaction(named:_:)-921h8","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityaction(named:_:)-9w6tc","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityactivationpoint(_:)-3m1oq","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityactivationpoint(_:)-4lpq0","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitycustomcontent(_:_:importance:)-13sa2","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitycustomcontent(_:_:importance:)-1hmv3","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitycustomcontent(_:_:importance:)-2bt5k","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitycustomcontent(_:_:importance:)-35np3","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitycustomcontent(_:_:importance:)-4nbmq","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitycustomcontent(_:_:importance:)-6cvt9","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitycustomcontent(_:_:importance:)-8a8ut","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitycustomcontent(_:_:importance:)-8f9zm","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityhint(_:)-1wih9","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityhint(_:)-6nctd","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityhint(_:)-7ytk8","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityinputlabels(_:)-5v1m2","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityinputlabels(_:)-8cai1","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityinputlabels(_:)-9o905","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitylabel(_:)-32ex6","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitylabel(_:)-4qqwt","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitylabel(_:)-ulxf","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:)-26df6","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:)-4vn62","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:)-6nx22","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:)-9qo4q","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7kof3","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7zea3","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8fbha","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:entryid:entrylabel:)-t65p","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:entrylabel:)-2u963","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:entrylabel:)-3vphp","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:entrylabel:)-4nbs2","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:entries:entrylabel:)-78buf","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:textranges:)-1qawu","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:textranges:)-1tad9","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:textranges:)-5dmjq","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotor(_:textranges:)-6el87","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityvalue(_:)-28kzr","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityvalue(_:)-4fj23","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/accessibilityvalue(_:)-7b8m","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:actions:)-1tw4p","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:actions:)-76t8","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:actions:)-88pfp","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:actions:message:)-1laha","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:actions:message:)-5i02t","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:actions:message:)-82284","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:presenting:actions:)-15qyx","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:presenting:actions:)-81yvt","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:presenting:actions:)-9qtxs","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:presenting:actions:message:)-54k5a","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:presenting:actions:message:)-6ua8q","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(_:ispresented:presenting:actions:message:)-95nn1","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alignmentguide(_:computevalue:)-7hpk0","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/alignmentguide(_:computevalue:)-8xpxd","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/aspectratio(_:contentmode:)-6swdw","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/aspectratio(_:contentmode:)-8bcqo","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/background(_:in:fillstyle:)-26dxm","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/background(_:in:fillstyle:)-7char","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/background(in:fillstyle:)-2316l","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/background(in:fillstyle:)-3y755","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/badge(_:)-2pw0x","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/badge(_:)-66i3z","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/badge(_:)-94bt4","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/badge(_:)-96w6b","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/buttonstyle(_:)-1fqyr","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/buttonstyle(_:)-n5vw","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1tuml","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5amfa","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8l61f","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4n6zr","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8anjz","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-s8li","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5emkf","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6hjqw","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6i19r","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-48u87","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5louj","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8in4q","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/contextmenufocusable(menuitems:)","title":"func contextMenuFocusable<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/contextmenufocusable(menuitems:oncontextmenuchange:)","title":"func contextMenuFocusable<MenuItems>(menuItems: () -> MenuItems, onContextMenuChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/cornerradius(_:corners:)","title":"func cornerRadius(CGFloat, corners: RectCorner) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/dismisseskeyboard(focus:)","title":"func dismissesKeyboard<T>(focus: FocusState<T?>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/erasetoanyview()","title":"func eraseToAnyView() -> AnyView","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-70ebf","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8r0i9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1x658","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1znfg","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusedobject(_:)-755xx","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusedobject(_:)-9inqf","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusedsceneobject(_:)-3m02d","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusedsceneobject(_:)-6cqx0","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusedscenevalue(_:_:)-2exz0","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusedscenevalue(_:_:)-r6k3","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusedvalue(_:_:)-4unh8","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/focusedvalue(_:_:)-59ef2","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/frameautosavename(_:)","title":"func frameAutosaveName(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/handlemouse(click:doubleclick:shiftclick:commandclick:)","title":"func handleMouse(click: ClickCompletion, doubleClick: ClickCompletion, shiftClick: ClickCompletion, commandClick: ClickCompletion) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/help(_:)-29roe","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/help(_:)-52m2o","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/help(_:)-62pak","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/horizontalspace(_:)","title":"func horizontalSpace(HorizontalSpace.Edge) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/keyboardshortcut(_:)-558xl","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/keyboardshortcut(_:)-5zne9","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/linelimit(_:)-4ahki","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/linelimit(_:)-77ce6","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/linelimit(_:)-8jpfc","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/linelimit(_:)-8n09b","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/listitemtint(_:)-4avdf","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/listitemtint(_:)-4qyxc","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/logkeyevents()","title":"func logKeyEvents() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/navigationbartitle(_:)-2yeov","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/navigationbartitle(_:)-4ic0r","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/navigationbartitle(_:)-9s92r","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/navigationbartitle(_:displaymode:)-2u2hc","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/navigationbartitle(_:displaymode:)-4va4o","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/navigationbartitle(_:displaymode:)-60nwp","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationdocument(_:preview:)-1lphk","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationdocument(_:preview:)-7xgxt","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationdocument(_:preview:)-87w62","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationdocument(_:preview:)-y89b","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationsubtitle(_:)-3mbhe","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationsubtitle(_:)-5dses","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationsubtitle(_:)-5qn0j","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationtitle(_:)-1jyjw","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationtitle(_:)-1yv6p","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationtitle(_:)-2ydg9","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationtitle(_:)-60ctf","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/navigationtitle(_:)-orfl","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/observesapplicationfocus()","title":"func observesApplicationFocus() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/ondrop(of:delegate:)-1o54p","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ondrop(of:delegate:)-1oxad","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ondrop(of:istargeted:perform:)-2f0mz","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ondrop(of:istargeted:perform:)-3j4e8","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/ondrop(of:istargeted:perform:)-3vha2","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/ondrop(of:istargeted:perform:)-9bvhu","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onentercommand(perform:)","title":"func onEnterCommand(perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onkey(_:modifiers:perform:)","title":"func onKey(KeyEquivalent, modifiers: EventModifiers, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onkey(_:perform:)","title":"func onKey(String, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onkeydown(handler:)","title":"func onKeyDown(handler: (NSEvent) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onkeyup(handler:)","title":"func onKeyUp(handler: (NSEvent) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onpastecommand(of:perform:)-43s4c","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/onpastecommand(of:perform:)-9qogl","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onpastecommand(of:validator:perform:)-259ix","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/onpastecommand(of:validator:perform:)-2wogp","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onselectcommand(perform:)","title":"func onSelectCommand(perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/padding(_:)-1k67h","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/padding(_:)-49ark","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/renameaction(_:)-2cufw","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/renameaction(_:)-91p3i","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/safeareainset(edge:alignment:spacing:content:)-4dvrw","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/safeareainset(edge:alignment:spacing:content:)-524if","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scaleeffect(_:anchor:)-6bgyj","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scaleeffect(_:anchor:)-9blpy","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:placement:prompt:)-2nle5","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:placement:prompt:)-326ua","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:placement:prompt:)-3zm5y","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:placement:prompt:suggestions:)-4ye1n","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:placement:prompt:suggestions:)-6nj8u","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:placement:prompt:suggestions:)-8h0np","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:tokens:placement:prompt:token:)-1t6l","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:tokens:placement:prompt:token:)-2kulu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:tokens:placement:prompt:token:)-9tscc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2ehjy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3vfs3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-rhha","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/toolbar(content:)-110a9","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/toolbar(content:)-4g4l8","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/frameautosaveview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/interact\/frameautosaveview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/interact\/frameautosaveview","title":"FrameAutosaveView","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/both","title":"static let both: HorizontalSpace.Edge","type":"property"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/leading","title":"static let leading: HorizontalSpace.Edge","type":"property"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/trailing","title":"static let trailing: HorizontalSpace.Edge","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/interact\/horizontalspace\/edge\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/interact\/horizontalspace\/edge\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/edge\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/interact\/horizontalspace\/edge\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/interact\/horizontalspace\/edge","title":"HorizontalSpace.Edge","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/init(_:)","title":"init(HorizontalSpace.Edge)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/body(content:)","title":"func body(content: HorizontalSpace.Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/horizontalspace\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/interact\/horizontalspace\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/interact\/horizontalspace\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/interact\/horizontalspace","title":"HorizontalSpace","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/iconview\/init(url:size:)","title":"init(url: URL, size: CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/iconview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/acceptsfirstresponder(isfirstresponder:)","title":"func acceptsFirstResponder(isFirstResponder: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(activationpoint:)-682ap","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(activationpoint:)-79xsl","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityaction(named:_:)-3zsix","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityaction(named:_:)-9p8jt","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityaction(named:_:)-dcaj","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityactivationpoint(_:)-44kyn","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityactivationpoint(_:)-rsjc","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitycustomcontent(_:_:importance:)-1aksq","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitycustomcontent(_:_:importance:)-23uhj","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitycustomcontent(_:_:importance:)-3ldw","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitycustomcontent(_:_:importance:)-3u4ib","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitycustomcontent(_:_:importance:)-6mvm3","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitycustomcontent(_:_:importance:)-6r3re","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitycustomcontent(_:_:importance:)-87ejq","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitycustomcontent(_:_:importance:)-eld","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityhint(_:)-2w0tt","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityhint(_:)-6bkto","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityhint(_:)-874qo","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityinputlabels(_:)-1ouev","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityinputlabels(_:)-211qq","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityinputlabels(_:)-8jxc4","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitylabel(_:)-56uj9","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitylabel(_:)-9fr7o","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitylabel(_:)-kx6s","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:)-1syv4","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:)-45m99","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:)-71j58","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:)-7wu7v","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3iiwg","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9exh3","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:entryid:entrylabel:)-csn7","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:entryid:entrylabel:)-gy15","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:entrylabel:)-14bpo","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:entrylabel:)-2mue3","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:entrylabel:)-6ac1e","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:entries:entrylabel:)-6xktl","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:textranges:)-51ldd","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:textranges:)-5bd07","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:textranges:)-84zns","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotor(_:textranges:)-lms1","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityvalue(_:)-5x2hl","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityvalue(_:)-5ym8s","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/accessibilityvalue(_:)-7ktgl","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:actions:)-5b483","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:actions:)-5ioc6","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:actions:)-725fk","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:actions:message:)-2aazu","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:actions:message:)-5d33k","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:actions:message:)-5whfn","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:presenting:actions:)-13nd2","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:presenting:actions:)-1b9uh","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:presenting:actions:)-9eb3x","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:presenting:actions:message:)-10zay","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:presenting:actions:message:)-25dgs","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(_:ispresented:presenting:actions:message:)-6ydd4","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alignmentguide(_:computevalue:)-180vn","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/alignmentguide(_:computevalue:)-8x1tk","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/aspectratio(_:contentmode:)-5lr6y","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/aspectratio(_:contentmode:)-ydh","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/background(_:in:fillstyle:)-80yu8","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/background(_:in:fillstyle:)-81rmz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/background(in:fillstyle:)-2mk5b","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/background(in:fillstyle:)-2tioa","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/badge(_:)-1mkdb","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/badge(_:)-58kjh","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/badge(_:)-8jl0","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/badge(_:)-usx3","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/buttonstyle(_:)-137u3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/buttonstyle(_:)-2b2c7","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2g1gt","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5s1qv","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9lynx","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1gffn","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5xyml","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-pvda","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4r7gz","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9gzt3","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-uytv","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-73oc6","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8breg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8i597","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/contextmenufocusable(menuitems:)","title":"func contextMenuFocusable<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/contextmenufocusable(menuitems:oncontextmenuchange:)","title":"func contextMenuFocusable<MenuItems>(menuItems: () -> MenuItems, onContextMenuChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/cornerradius(_:corners:)","title":"func cornerRadius(CGFloat, corners: RectCorner) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/dismisseskeyboard(focus:)","title":"func dismissesKeyboard<T>(focus: FocusState<T?>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/erasetoanyview()","title":"func eraseToAnyView() -> AnyView","type":"method"},{"path":"\/documentation\/interact\/iconview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-29tmi","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7ejv3","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-511v7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8bxv3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusedobject(_:)-1gcjx","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusedobject(_:)-2pbt4","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusedsceneobject(_:)-3czzk","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusedsceneobject(_:)-92ehi","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusedscenevalue(_:_:)-3b771","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusedscenevalue(_:_:)-5uqdv","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusedvalue(_:_:)-2jpqr","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/focusedvalue(_:_:)-ryk2","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/frameautosavename(_:)","title":"func frameAutosaveName(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/handlemouse(click:doubleclick:shiftclick:commandclick:)","title":"func handleMouse(click: ClickCompletion, doubleClick: ClickCompletion, shiftClick: ClickCompletion, commandClick: ClickCompletion) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/help(_:)-3a4mk","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/help(_:)-7aw8z","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/help(_:)-9u780","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/horizontalspace(_:)","title":"func horizontalSpace(HorizontalSpace.Edge) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/keyboardshortcut(_:)-5j2r5","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/keyboardshortcut(_:)-5r7ek","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/linelimit(_:)-3oe0z","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/linelimit(_:)-4p1au","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/linelimit(_:)-73t91","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/linelimit(_:)-9ntcy","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/listitemtint(_:)-2yey1","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/listitemtint(_:)-6a1h4","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/logkeyevents()","title":"func logKeyEvents() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/interact\/iconview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/navigationbartitle(_:)-75v9a","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/navigationbartitle(_:)-7m0s6","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/navigationbartitle(_:)-h01e","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/navigationbartitle(_:displaymode:)-5tzc2","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/navigationbartitle(_:displaymode:)-6rd10","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/navigationbartitle(_:displaymode:)-86epr","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationdocument(_:preview:)-1psoo","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationdocument(_:preview:)-1wwx3","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationdocument(_:preview:)-6ei65","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationdocument(_:preview:)-uyhe","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationsubtitle(_:)-1n9nu","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationsubtitle(_:)-7y2k4","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationsubtitle(_:)-9krlw","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationtitle(_:)-2wagj","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationtitle(_:)-422qd","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationtitle(_:)-85wz8","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationtitle(_:)-n0mp","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/navigationtitle(_:)-zk16","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/observesapplicationfocus()","title":"func observesApplicationFocus() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/ondrop(of:delegate:)-7j675","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ondrop(of:delegate:)-ulvt","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/ondrop(of:istargeted:perform:)-66hjw","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ondrop(of:istargeted:perform:)-6xpbz","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/ondrop(of:istargeted:perform:)-733jw","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ondrop(of:istargeted:perform:)-7cuwc","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onentercommand(perform:)","title":"func onEnterCommand(perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onkey(_:modifiers:perform:)","title":"func onKey(KeyEquivalent, modifiers: EventModifiers, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onkey(_:perform:)","title":"func onKey(String, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onkeydown(handler:)","title":"func onKeyDown(handler: (NSEvent) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onkeyup(handler:)","title":"func onKeyUp(handler: (NSEvent) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/onpastecommand(of:perform:)-2tgew","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onpastecommand(of:perform:)-6zlz","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onpastecommand(of:validator:perform:)-8648o","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/onpastecommand(of:validator:perform:)-erwi","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onselectcommand(perform:)","title":"func onSelectCommand(perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/padding(_:)-27di6","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/padding(_:)-5f9d3","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/renameaction(_:)-4a7wt","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/renameaction(_:)-5xotu","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/safeareainset(edge:alignment:spacing:content:)-35tmu","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/safeareainset(edge:alignment:spacing:content:)-9e9vi","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scaleeffect(_:anchor:)-49ypu","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scaleeffect(_:anchor:)-9ehvk","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchable(text:placement:prompt:)-3kk4y","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchable(text:placement:prompt:)-6m4bp","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchable(text:placement:prompt:)-8et5d","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/searchable(text:placement:prompt:suggestions:)-1a6u3","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/searchable(text:placement:prompt:suggestions:)-71bjm","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/iconview\/searchable(text:placement:prompt:suggestions:)-9jc0t","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchable(text:tokens:placement:prompt:token:)-5pv2p","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchable(text:tokens:placement:prompt:token:)-6t83a","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchable(text:tokens:placement:prompt:token:)-tnm3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2mhcd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9izq5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9xc2e","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/toolbar(content:)-1q6ho","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/toolbar(content:)-9stk3","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/iconview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/interact\/iconview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/interact\/iconview","title":"IconView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/rectcorner\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/rectcorner\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/rectcorner\/all","title":"static let all: RectCorner","type":"property"},{"path":"\/documentation\/interact\/rectcorner\/bottomleft","title":"static let bottomLeft: RectCorner","type":"property"},{"path":"\/documentation\/interact\/rectcorner\/bottomright","title":"static let bottomRight: RectCorner","type":"property"},{"path":"\/documentation\/interact\/rectcorner\/topleft","title":"static let topLeft: RectCorner","type":"property"},{"path":"\/documentation\/interact\/rectcorner\/topright","title":"static let topRight: RectCorner","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/interact\/rectcorner\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/interact\/rectcorner\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/rectcorner\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/rectcorner\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/interact\/rectcorner\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/rectcorner\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/interact\/rectcorner\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/rectcorner\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/rectcorner\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/interact\/rectcorner\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/interact\/rectcorner\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/interact\/rectcorner","title":"RectCorner","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/roundedcorner\/init(radius:corners:)","title":"init(radius: CGFloat, corners: RectCorner)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/roundedcorner\/corners","title":"let corners: RectCorner","type":"property"},{"path":"\/documentation\/interact\/roundedcorner\/radius","title":"let radius: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/roundedcorner\/path(in:)","title":"func path(in: CGRect) -> Path","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/roundedcorner\/animatabledata","title":"var animatableData: EmptyAnimatableData","type":"property"}],"path":"\/documentation\/interact\/roundedcorner\/animatable-implementations","title":"Animatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/roundedcorner\/fill(_:style:)","title":"func fill<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fill(style:)","title":"func fill(style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/offset(_:)-7qr8l","title":"func offset(CGPoint) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/offset(_:)-8kmkl","title":"func offset(CGSize) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/rotation(_:anchor:)","title":"func rotation(Angle, anchor: UnitPoint) -> RotatedShape<Self>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scale(_:anchor:)","title":"func scale(CGFloat, anchor: UnitPoint) -> ScaledShape<Self>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scale(x:y:anchor:)","title":"func scale(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> ScaledShape<Self>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/size(_:)","title":"func size(CGSize) -> some Shape","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/size(width:height:)","title":"func size(width: CGFloat, height: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/sizethatfits(_:)","title":"func sizeThatFits(ProposedViewSize) -> CGSize","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/stroke(_:linewidth:)","title":"func stroke<S>(S, lineWidth: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/stroke(_:style:)","title":"func stroke<S>(S, style: StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/stroke(linewidth:)","title":"func stroke(lineWidth: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/stroke(style:)","title":"func stroke(style: StrokeStyle) -> some Shape","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/transform(_:)","title":"func transform(CGAffineTransform) -> TransformedShape<Self>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/trim(from:to:)","title":"func trim(from: CGFloat, to: CGFloat) -> some Shape","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/roundedcorner\/role","title":"static var role: ShapeRole","type":"property"}],"path":"\/documentation\/interact\/roundedcorner\/shape-implementations","title":"Shape Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/roundedcorner\/body","title":"var body: _ShapeView<Self, ForegroundStyle>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/acceptsfirstresponder(isfirstresponder:)","title":"func acceptsFirstResponder(isFirstResponder: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(activationpoint:)-1wsjh","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(activationpoint:)-9s682","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityaction(named:_:)-6w3u","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityaction(named:_:)-7a0i8","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityaction(named:_:)-qhla","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityactivationpoint(_:)-1zmuk","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityactivationpoint(_:)-9xk3h","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitycustomcontent(_:_:importance:)-1gw7j","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitycustomcontent(_:_:importance:)-4dg8","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitycustomcontent(_:_:importance:)-4jwwf","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitycustomcontent(_:_:importance:)-4kp8","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitycustomcontent(_:_:importance:)-6p4h8","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitycustomcontent(_:_:importance:)-8mrv2","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitycustomcontent(_:_:importance:)-92a9y","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitycustomcontent(_:_:importance:)-k2d6","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityhint(_:)-2tts0","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityhint(_:)-4gdu3","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityhint(_:)-5tig7","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityinputlabels(_:)-173eo","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityinputlabels(_:)-2usor","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityinputlabels(_:)-3e1yj","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitylabel(_:)-3wlk5","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitylabel(_:)-4dhxm","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitylabel(_:)-bcur","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:)-5ulms","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:)-5wrf","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:)-74ap8","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:)-9bjsd","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:entryid:entrylabel:)-1nr49","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:entryid:entrylabel:)-30d3m","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:entryid:entrylabel:)-7gy4e","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:entryid:entrylabel:)-g776","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:entrylabel:)-1g8c2","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:entrylabel:)-1hdyd","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:entrylabel:)-23uvr","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:entries:entrylabel:)-28ipw","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:textranges:)-1dblk","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:textranges:)-4ajog","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:textranges:)-81jya","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotor(_:textranges:)-v9aw","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityvalue(_:)-228hn","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityvalue(_:)-4p37y","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/accessibilityvalue(_:)-9ipha","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:actions:)-5drte","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:actions:)-9d9c","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:actions:)-9q34h","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:actions:message:)-31x8c","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:actions:message:)-60jfs","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:actions:message:)-9qmff","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:presenting:actions:)-17kj","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:presenting:actions:)-7jc9v","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:presenting:actions:)-8gjj7","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:presenting:actions:message:)-1wbym","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:presenting:actions:message:)-90mi4","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(_:ispresented:presenting:actions:message:)-j7gs","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alignmentguide(_:computevalue:)-1q05m","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/alignmentguide(_:computevalue:)-kvpl","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/aspectratio(_:contentmode:)-2xk3m","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/aspectratio(_:contentmode:)-7exnj","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/background(_:in:fillstyle:)-285hc","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/background(_:in:fillstyle:)-8zufl","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/background(in:fillstyle:)-7n08m","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/background(in:fillstyle:)-9dvp1","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/badge(_:)-70ej7","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/badge(_:)-77q6w","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/badge(_:)-90js","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/badge(_:)-9fh1t","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/buttonstyle(_:)-3yhm0","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/buttonstyle(_:)-8vhvn","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1hj12","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:actions:)-59f36","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:actions:)-86vbg","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2104j","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4uyxf","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7rsom","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-687q2","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7tgg1","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9beyq","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1s41d","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2e8l6","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8ihus","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/contextmenufocusable(menuitems:)","title":"func contextMenuFocusable<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/contextmenufocusable(menuitems:oncontextmenuchange:)","title":"func contextMenuFocusable<MenuItems>(menuItems: () -> MenuItems, onContextMenuChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/cornerradius(_:corners:)","title":"func cornerRadius(CGFloat, corners: RectCorner) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/dismisseskeyboard(focus:)","title":"func dismissesKeyboard<T>(focus: FocusState<T?>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/erasetoanyview()","title":"func eraseToAnyView() -> AnyView","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8meja","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9xty2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fileexporter(ispresented:documents:contenttype:oncompletion:)-44oue","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4p98y","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusedobject(_:)-6ah0p","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusedobject(_:)-c7oe","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusedsceneobject(_:)-69u57","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusedsceneobject(_:)-7blew","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusedscenevalue(_:_:)-1bew8","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusedscenevalue(_:_:)-59qg8","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusedvalue(_:_:)-1fmhw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/focusedvalue(_:_:)-uy0g","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/frameautosavename(_:)","title":"func frameAutosaveName(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/handlemouse(click:doubleclick:shiftclick:commandclick:)","title":"func handleMouse(click: ClickCompletion, doubleClick: ClickCompletion, shiftClick: ClickCompletion, commandClick: ClickCompletion) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/help(_:)-2b4rg","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/help(_:)-37naz","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/help(_:)-9rswf","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/horizontalspace(_:)","title":"func horizontalSpace(HorizontalSpace.Edge) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/keyboardshortcut(_:)-696vw","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/keyboardshortcut(_:)-6m42m","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/linelimit(_:)-378gy","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/linelimit(_:)-69rv3","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/linelimit(_:)-9epk2","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/linelimit(_:)-efog","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/listitemtint(_:)-2jhup","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/listitemtint(_:)-998z0","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/logkeyevents()","title":"func logKeyEvents() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/navigationbartitle(_:)-6gj8u","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/navigationbartitle(_:)-8uge1","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/navigationbartitle(_:)-9ntk6","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/navigationbartitle(_:displaymode:)-2kid9","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/navigationbartitle(_:displaymode:)-6ia7n","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/navigationbartitle(_:displaymode:)-7a740","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationdocument(_:preview:)-1f7bo","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationdocument(_:preview:)-1m0g2","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationdocument(_:preview:)-28mqq","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationdocument(_:preview:)-35ri6","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationsubtitle(_:)-3kihm","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationsubtitle(_:)-54f7c","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationsubtitle(_:)-6jdwy","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationtitle(_:)-2bayp","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationtitle(_:)-4fchf","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationtitle(_:)-4kg2b","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationtitle(_:)-973j9","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/navigationtitle(_:)-r2fg","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/observesapplicationfocus()","title":"func observesApplicationFocus() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/offset(_:)-4idy8","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/ondrop(of:delegate:)-492iz","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ondrop(of:delegate:)-4j12y","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ondrop(of:istargeted:perform:)-2bidh","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ondrop(of:istargeted:perform:)-41my1","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/ondrop(of:istargeted:perform:)-qbbl","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/ondrop(of:istargeted:perform:)-u719","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onentercommand(perform:)","title":"func onEnterCommand(perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onkey(_:modifiers:perform:)","title":"func onKey(KeyEquivalent, modifiers: EventModifiers, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onkey(_:perform:)","title":"func onKey(String, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onkeydown(handler:)","title":"func onKeyDown(handler: (NSEvent) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onkeyup(handler:)","title":"func onKeyUp(handler: (NSEvent) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/onpastecommand(of:perform:)-1liv9","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onpastecommand(of:perform:)-t5oc","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/onpastecommand(of:validator:perform:)-8hwsf","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onpastecommand(of:validator:perform:)-vb41","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onselectcommand(perform:)","title":"func onSelectCommand(perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/padding(_:)-1tdpf","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/padding(_:)-4akd7","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/renameaction(_:)-2sx40","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/renameaction(_:)-3szbm","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/safeareainset(edge:alignment:spacing:content:)-4e9vn","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/safeareainset(edge:alignment:spacing:content:)-5z5qe","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scaleeffect(_:anchor:)-4uqkl","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scaleeffect(_:anchor:)-8xjfb","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchable(text:placement:prompt:)-5pypm","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchable(text:placement:prompt:)-9f467","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchable(text:placement:prompt:)-9re25","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/searchable(text:placement:prompt:suggestions:)-1nc2i","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/searchable(text:placement:prompt:suggestions:)-3ymh0","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/roundedcorner\/searchable(text:placement:prompt:suggestions:)-5qkfz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchable(text:tokens:placement:prompt:token:)-188wu","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchable(text:tokens:placement:prompt:token:)-37v6r","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchable(text:tokens:placement:prompt:token:)-mg2t","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3v6dr","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-44bi0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9w4x2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/toolbar(content:)-3ungp","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/toolbar(content:)-6mdkn","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/roundedcorner\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/interact\/roundedcorner\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/interact\/roundedcorner","title":"RoundedCorner","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/searchfield\/coordinator\/controltextdidchange(_:)","title":"func controlTextDidChange(Notification)","type":"method"}],"path":"\/documentation\/interact\/searchfield\/coordinator","title":"SearchField.Coordinator","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/interact\/searchfield\/init(search:)","title":"init(search: Binding<String>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/searchfield\/makecoordinator()","title":"func makeCoordinator() -> SearchField.Coordinator","type":"method"},{"path":"\/documentation\/interact\/searchfield\/makensview(context:)","title":"func makeNSView(context: SearchField.Context) -> NSSearchField","type":"method"},{"path":"\/documentation\/interact\/searchfield\/updatensview(_:context:)","title":"func updateNSView(NSSearchField, context: SearchField.Context)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/interact\/searchfield\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/searchfield\/sizethatfits(_:nsview:context:)","title":"func sizeThatFits(ProposedViewSize, nsView: Self.NSViewType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/interact\/searchfield\/dismantlensview(_:coordinator:)","title":"static func dismantleNSView(Self.NSViewType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/interact\/searchfield\/nsviewrepresentable-implementations","title":"NSViewRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/acceptsfirstresponder(isfirstresponder:)","title":"func acceptsFirstResponder(isFirstResponder: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(activationpoint:)-5c7x3","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(activationpoint:)-7lljp","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityaction(named:_:)-2dkkq","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityaction(named:_:)-3ym78","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityaction(named:_:)-65cz7","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityactivationpoint(_:)-22lcw","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityactivationpoint(_:)-fscx","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitycustomcontent(_:_:importance:)-35i57","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitycustomcontent(_:_:importance:)-7xa05","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitycustomcontent(_:_:importance:)-87cpr","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitycustomcontent(_:_:importance:)-88esu","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitycustomcontent(_:_:importance:)-8t0xt","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitycustomcontent(_:_:importance:)-9nd14","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitycustomcontent(_:_:importance:)-9ndj9","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitycustomcontent(_:_:importance:)-iwa5","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityhint(_:)-12wmi","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityhint(_:)-29aj5","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityhint(_:)-9couq","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityinputlabels(_:)-1lojn","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityinputlabels(_:)-1oela","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityinputlabels(_:)-4leam","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitylabel(_:)-7k567","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitylabel(_:)-9uljl","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitylabel(_:)-n64y","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:)-1cw8e","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:)-3mtzv","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:)-4ajgi","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:)-9y6xc","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-1luzt","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-2h8h","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-50jke","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-8hx8l","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:entrylabel:)-2o973","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:entrylabel:)-3fybn","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:entrylabel:)-3tkfc","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:entries:entrylabel:)-6zj96","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:textranges:)-1gql5","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:textranges:)-1untg","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:textranges:)-6wp4t","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotor(_:textranges:)-9da1i","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityvalue(_:)-6csd2","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityvalue(_:)-7vcz3","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/accessibilityvalue(_:)-9ib71","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:actions:)-6sktb","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:actions:)-8bv0f","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:actions:)-x1wz","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:actions:message:)-3tufq","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:actions:message:)-64idm","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:actions:message:)-9uyi4","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:presenting:actions:)-2saix","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:presenting:actions:)-32i7x","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:presenting:actions:)-5pd1r","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:presenting:actions:message:)-8paj9","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:presenting:actions:message:)-933q8","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(_:ispresented:presenting:actions:message:)-9cvqt","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alignmentguide(_:computevalue:)-3iskv","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/alignmentguide(_:computevalue:)-4yq8o","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/aspectratio(_:contentmode:)-28kh9","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/aspectratio(_:contentmode:)-851v5","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/background(_:in:fillstyle:)-2z9wx","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/background(_:in:fillstyle:)-5t5ec","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/background(in:fillstyle:)-64guj","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/background(in:fillstyle:)-81rz","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/badge(_:)-4f3bn","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/badge(_:)-6cg44","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/badge(_:)-6ex0s","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/badge(_:)-75yeh","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/buttonstyle(_:)-2d2qp","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/buttonstyle(_:)-4ejgg","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5fg8v","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5mnug","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8idp4","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-10ta2","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-17iv3","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-25doo","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1bbdc","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4jebo","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-77zuj","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1d0ac","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2ftji","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2qlze","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/contextmenufocusable(menuitems:)","title":"func contextMenuFocusable<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/contextmenufocusable(menuitems:oncontextmenuchange:)","title":"func contextMenuFocusable<MenuItems>(menuItems: () -> MenuItems, onContextMenuChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/cornerradius(_:corners:)","title":"func cornerRadius(CGFloat, corners: RectCorner) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/dismisseskeyboard(focus:)","title":"func dismissesKeyboard<T>(focus: FocusState<T?>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/erasetoanyview()","title":"func eraseToAnyView() -> AnyView","type":"method"},{"path":"\/documentation\/interact\/searchfield\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-44mvg","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4o8pc","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3chrd","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7datu","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusedobject(_:)-7i2m1","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusedobject(_:)-8sa92","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusedsceneobject(_:)-nczk","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusedsceneobject(_:)-wsuf","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusedscenevalue(_:_:)-7hntr","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusedscenevalue(_:_:)-8lxw5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusedvalue(_:_:)-1kwqq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/focusedvalue(_:_:)-1qkvh","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/frameautosavename(_:)","title":"func frameAutosaveName(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/handlemouse(click:doubleclick:shiftclick:commandclick:)","title":"func handleMouse(click: ClickCompletion, doubleClick: ClickCompletion, shiftClick: ClickCompletion, commandClick: ClickCompletion) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/help(_:)-4rqvb","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/help(_:)-7gl7v","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/help(_:)-lwcm","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/horizontalspace(_:)","title":"func horizontalSpace(HorizontalSpace.Edge) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/keyboardshortcut(_:)-3vifo","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/keyboardshortcut(_:)-4itq9","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/linelimit(_:)-4cvha","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/linelimit(_:)-4t2vw","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/linelimit(_:)-6l7vc","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/linelimit(_:)-9y3j0","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/listitemtint(_:)-54fak","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/listitemtint(_:)-5co3w","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/logkeyevents()","title":"func logKeyEvents() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/interact\/searchfield\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/navigationbartitle(_:)-1abcg","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/navigationbartitle(_:)-7p5d5","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/navigationbartitle(_:)-9fqjn","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/navigationbartitle(_:displaymode:)-1z5ev","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/navigationbartitle(_:displaymode:)-3o2fs","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/navigationbartitle(_:displaymode:)-4e5o4","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationdocument(_:preview:)-5pnst","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationdocument(_:preview:)-8ddiy","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationdocument(_:preview:)-8ghwh","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationdocument(_:preview:)-ofev","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationsubtitle(_:)-2k5x4","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationsubtitle(_:)-3hxdw","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationsubtitle(_:)-4olck","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationtitle(_:)-12b3g","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationtitle(_:)-69y7z","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationtitle(_:)-73gp2","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationtitle(_:)-9jsuw","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/navigationtitle(_:)-gr2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/observesapplicationfocus()","title":"func observesApplicationFocus() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ondrop(of:delegate:)-1rcbr","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/ondrop(of:delegate:)-7lwve","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/ondrop(of:istargeted:perform:)-1i81l","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/ondrop(of:istargeted:perform:)-3ygup","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ondrop(of:istargeted:perform:)-4u5xn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ondrop(of:istargeted:perform:)-9yh6v","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onentercommand(perform:)","title":"func onEnterCommand(perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onkey(_:modifiers:perform:)","title":"func onKey(KeyEquivalent, modifiers: EventModifiers, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onkey(_:perform:)","title":"func onKey(String, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onkeydown(handler:)","title":"func onKeyDown(handler: (NSEvent) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onkeyup(handler:)","title":"func onKeyUp(handler: (NSEvent) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/onpastecommand(of:perform:)-4r7nw","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onpastecommand(of:perform:)-68vno","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/onpastecommand(of:validator:perform:)-44i2j","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onpastecommand(of:validator:perform:)-7ub09","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onselectcommand(perform:)","title":"func onSelectCommand(perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/padding(_:)-1msiu","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/padding(_:)-4ryrb","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/renameaction(_:)-8oqk","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/renameaction(_:)-8xzcu","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/safeareainset(edge:alignment:spacing:content:)-155pa","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/safeareainset(edge:alignment:spacing:content:)-409sc","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scaleeffect(_:anchor:)-1q7q3","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scaleeffect(_:anchor:)-8km8q","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchable(text:placement:prompt:)-389aw","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchable(text:placement:prompt:)-6vsl9","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchable(text:placement:prompt:)-7aldv","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/searchable(text:placement:prompt:suggestions:)-18sxk","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/searchable(text:placement:prompt:suggestions:)-1fm64","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/interact\/searchfield\/searchable(text:placement:prompt:suggestions:)-7prug","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchable(text:tokens:placement:prompt:token:)-88fv1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchable(text:tokens:placement:prompt:token:)-8h77l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchable(text:tokens:placement:prompt:token:)-9pe17","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4dm2s","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5vvrw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8adpt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/toolbar(content:)-6wqe7","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/toolbar(content:)-8mjr5","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/interact\/searchfield\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/interact\/searchfield\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/interact\/searchfield","title":"SearchField","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/interact\/clickcompletion","title":"ClickCompletion","type":"typealias"},{"path":"\/documentation\/interact\/closewindowaction","title":"CloseWindowAction","type":"typealias"}],"path":"\/documentation\/interact","title":"Interact","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}